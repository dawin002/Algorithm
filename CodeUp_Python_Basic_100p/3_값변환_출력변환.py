### 6025 : [기초-값변환] 정수 2개 입력받아 합 계산하기

# 정수 2개를 입력받아
# 합을 출력하는 프로그램을 작성해보자.

# 참고
# 입력되는 값은 기본적으로 문자열로 인식된다.
# 문자열 + 문자열은 두 문자열을 합친 문자열을 만든다.
# 숫자로 구성된 문자열이나 실수를 정수(integer) 값으로 바꾸기 위해서는 int( ) 를 사용할 수 있다.
# 수 + 수의 결과는 합(addition)이 계산된다.

# a, b = input().split(' ')
# c = int(a) + int(b)
# print(c)

#
#
#
#

### 6026 : [기초-값변환] 실수 2개 입력받아 합 계산하기

# 실수 2개를 입력받아
# 합을 출력하는 프로그램을 작성해보자.

# 참고

# 숫자로 구성된 문자열이나 정수를 실수(real number) 값으로 바꾸기 위해서는 float( ) 를 사용할 수 있다.
# 소숫점(.)은 그 위치가 정해져있지 않고 이리저리 둥둥 떠다니므로, floating point라고 부른다.

# a = input()
# b = input()
# c = float(a) + float(b)
# print(c)

#
#
#
#

### 6027 : [기초-출력변환] 10진 정수 입력받아 16진수로 출력하기1

# 10진수를 입력받아 16진수(hexadecimal)로 출력해보자.

# 참고
# 10진수 형태로 입력받고
# %x로 출력하면 16진수(hexadecimal) 소문자로 출력된다.
# (%o로 출력하면 8진수(octal) 문자열로 출력된다.)

# 출력할 때 서식 지정하는 방법은 print 안에 ( '%서식' %변수 ) 로 지정한다

# a = input()
# print('%x' %int(a))

#
#
#
#

### 6028 : [기초-출력변환] 10진 정수 입력받아 16진수로 출력하기2

# 10진수를 입력받아 16진수(hexadecimal)로 출력하되, 영문자는 대문자로 출력해보자.

# 참고
# %X 로 출력하면 16진수(hexadecimal)대문자로 출력된다.

# a = input()
# print( '%X' %int(a) )

#
#
#
#

### 6029 : [기초-값변환] 16진 정수 입력받아 8진수로 출력하기

# 16진수를 입력받아 8진수(octal)로 출력해보자.

# 참고

# 입력받은 값을 16진수로 인식하게 하려면 다음 문장을 사용하면 된다
# a = int(a, 16)

# a = input()
# print('%o' %int(a, 16))

#
#
#
#

### 6030 : [기초-값변환] 영문자 1개 입력받아 10진수로 변환하기

# 영문자 1개를 입력받아 10진수 유니코드(Unicode) 값으로 출력해보자.

# 참고
# n = ord(input())  #입력받은 문자를 10진수 유니코드 값으로 변환한 후, n에 저장한다.

# ord( ) 는 어떤 문자의 순서 위치(ordinal position) 값을 의미한다.
# 실제로 각각의 문자들에는 연속된 정수 값이 순서에 따라 부여 되어 있다. A:65, B:66, C:67 ....
# ord(c) : 문자 c 를 10진수로 변환한 값

# c = input()
# c = ord(c)
# print(c)

#
#
#
#

### 6031 : [기초-값변환] 정수 입력받아 유니코드 문자로 변환하기

# 10진 정수 1개를 입력받아
# 유니코드 문자로 출력해보자.

# 참고

# chr( )는 정수값->문자, ord( )는 문자->정수값 형태로 바꿔주는 서로 반대 방향으로 바꾸어 주는 기능을 한다.

# n = input()
# n = int(n)
# n = chr(n)
# print(n)