""" 10610 : 30 """
# 어느 날, 미르코는 우연히 길거리에서 양수 N을 보았다. 미르코는 30이란 수를 존경하기 때문에, 그는 길거리에서 찾은 수에 포함된 숫자들을 섞어 30의 배수가 되는 가장 큰 수를 만들고 싶어한다.

# 미르코를 도와 그가 만들고 싶어하는 수를 계산하는 프로그램을 작성하라.

# 입력
# N을 입력받는다. N는 최대 10^5개의 숫자로 구성되어 있으며, 0으로 시작하지 않는다.

# 출력
# 미르코가 만들고 싶어하는 수가 존재한다면 그 수를 출력하라. 그 수가 존재하지 않는다면, -1을 출력하라.

# 예제 입력 2
# 102
# 예제 출력 2
# 210

# 예제 입력 3
# 2931
# 예제 출력 3
# -1

# 예제 입력 4
# 80875542
# 예제 출력 4
# 88755420

#
""" my code """
# 일단 30의 배수가 되는지 확인해야함...
# 1) 0이 포함되어 있는지
# 2) 3의 배수를 만들 수 있는지?


def thirty():
  n = [int(i) for i in input()]
  n.sort(reverse=True)
  if sum(n) % 3 == 0 and n[-1] == 0:  # join 함수 다시 찾아볼 것
    print(''.join(str(i) for i in n))  # join 인자로 반복문 넣어줄 수 있음
  else:
    print(-1)


""" advanced code : 거의 맞았는데 조금 보완함 """


def thirty_advanced():
  n = list(input())  # input()으로 문자열 받아 list() 씌우면 문자 리스트로 변환됨
  if sum(map(int, n)) % 3 == 0:  # sum( map(int, 리스트) ) --> 이렇게 가능함
    n.sort(reverse=True)  # sort를 if문 안으로 넣어서 조건 false 일때 시간 아낌
    if n[-1] == '0':
      print(''.join(n))  # n 리스트를 int형으로 변환 안해놔서 str로 재변환할 필요 없어짐
    else:
      print(-1)
  else:
    print(-1)